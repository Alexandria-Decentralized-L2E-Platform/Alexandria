/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { AlexCertificate, AlexCertificateInterface } from '../../contracts/AlexCertificate';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_alexLibrary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_certId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: '_certTitle',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'alexLibrary',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'certId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'certTitle',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'certifiedAt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'safeMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001f0638038062001f06833981016040819052620000349162000186565b604080518082018252600f81526e416c6578436572746966696361746560881b6020808301918252835180850190945260058452641850d1549560da1b9084015281519192916200008891600091620000e0565b5080516200009e906001906020840190620000e0565b5050600880546001600160a01b0319166001600160a01b0386161790555060098290558051620000d690600a906020840190620000e0565b50505050620002db565b828054620000ee9062000288565b90600052602060002090601f0160209004810192826200011257600085556200015d565b82601f106200012d57805160ff19168380011785556200015d565b828001600101855582156200015d579182015b828111156200015d57825182559160200191906001019062000140565b506200016b9291506200016f565b5090565b5b808211156200016b576000815560010162000170565b6000806000606084860312156200019b578283fd5b83516001600160a01b0381168114620001b2578384fd5b60208581015160408701519295509350906001600160401b0380821115620001d8578384fd5b818701915087601f830112620001ec578384fd5b815181811115620002015762000201620002c5565b604051601f8201601f19908116603f011681019083821181831017156200022c576200022c620002c5565b816040528281528a8684870101111562000244578687fd5b8693505b8284101562000267578484018601518185018701529285019262000248565b828411156200027857868684830101525b8096505050505050509250925092565b600181811c908216806200029d57607f821691505b60208210811415620002bf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c1b80620002eb6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80635d21b263116100cd578063a22cb46511610081578063c87b56dd11610066578063c87b56dd146102bc578063de25fc17146102cf578063e985e9c5146102d857600080fd5b8063a22cb46514610296578063b88d4fde146102a957600080fd5b806370a08231116100b257806370a082311461024d57806395d89b411461026e5780639a00fdbb1461027657600080fd5b80635d21b263146102325780636352211e1461023a57600080fd5b8063095ea7b31161012457806340d097c31161010957806340d097c3146101f957806342842e0e1461020c57806342966c681461021f57600080fd5b8063095ea7b3146101d157806323b872dd146101e657600080fd5b80630102c5601461015657806301ffc9a71461018657806306fdde03146101a9578063081812fc146101be575b600080fd5b600854610169906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101996101943660046119ba565b610314565b604051901515815260200161017d565b6101b16103b1565b60405161017d9190611aa1565b6101696101cc3660046119f2565b610443565b6101e46101df366004611991565b6104dd565b005b6101e46101f4366004611847565b61060f565b6101e46102073660046117fb565b610696565b6101e461021a366004611847565b610780565b6101e461022d3660046119f2565b61079b565b6101b1610807565b6101696102483660046119f2565b610895565b61026061025b3660046117fb565b610920565b60405190815260200161017d565b6101b16109ba565b6102606102843660046119f2565b600b6020526000908152604090205481565b6101e46102a4366004611957565b6109c9565b6101e46102b7366004611882565b6109d4565b6101b16102ca3660046119f2565b610a62565b61026060095481565b6101996102e6366004611815565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061037757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103ab57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546103c090611b23565b80601f01602080910402602001604051908101604052809291908181526020018280546103ec90611b23565b80156104395780601f1061040e57610100808354040283529160200191610439565b820191906000526020600020905b81548152906001019060200180831161041c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104c15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104e882610895565b9050806001600160a01b0316836001600160a01b031614156105725760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104b8565b336001600160a01b038216148061058e575061058e81336102e6565b6106005760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104b8565b61060a8383610a6d565b505050565b6106193382610ae8565b61068b5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b8565b61060a838383610bdf565b6008546001600160a01b031633146106f05760405162461bcd60e51b815260206004820152601d60248201527f43616e206f6e6c79206265206d696e7465642062792070726f6772616d00000060448201526064016104b8565b6106f981610920565b156107465760405162461bcd60e51b815260206004820152601f60248201527f416c7265616479206f776e656420746869732063657274696669636174652e0060448201526064016104b8565b600061075160075490565b9050610761600780546001019055565b6000818152600b6020526040902042905561077c8282610dc4565b5050565b61060a838383604051806020016040528060008152506109d4565b336107a582610895565b6001600160a01b0316146107fb5760405162461bcd60e51b815260206004820152601460248201527f4e6f7420616c6c6f77656420746f206275726e2e00000000000000000000000060448201526064016104b8565b61080481610dde565b50565b600a805461081490611b23565b80601f016020809104026020016040519081016040528092919081815260200182805461084090611b23565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806103ab5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104b8565b60006001600160a01b03821661099e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104b8565b506001600160a01b031660009081526003602052604090205490565b6060600180546103c090611b23565b61077c338383610de7565b6109de3383610ae8565b610a505760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104b8565b610a5c84848484610eb6565b50505050565b60606103ab82610f34565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610aaf82610895565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104b8565b6000610b6c83610895565b9050806001600160a01b0316846001600160a01b03161480610bb357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610bd75750836001600160a01b0316610bcc84610443565b6001600160a01b0316145b949350505050565b826001600160a01b0316610bf282610895565b6001600160a01b031614610c6e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104b8565b6001600160a01b038216610ce95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104b8565b610cf48383836110bf565b610cff600082610a6d565b6001600160a01b0383166000908152600360205260408120805460019290610d28908490611ae0565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d56908490611ab4565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61077c828260405180602001604052806000815250611128565b610804816111a6565b816001600160a01b0316836001600160a01b03161415610e495760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ec1848484610bdf565b610ecd848484846111e6565b610a5c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b8565b6000818152600260205260409020546060906001600160a01b0316610fc15760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016104b8565b60008281526006602052604081208054610fda90611b23565b80601f016020809104026020016040519081016040528092919081815260200182805461100690611b23565b80156110535780601f1061102857610100808354040283529160200191611053565b820191906000526020600020905b81548152906001019060200180831161103657829003601f168201915b50505050509050600061107160408051602081019091526000815290565b9050805160001415611084575092915050565b8151156110b657808260405160200161109e929190611a36565b60405160208183030381529060405292505050919050565b610bd78461133e565b6001600160a01b03831615806110dc57506001600160a01b038216155b61060a5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206973206e6f74207472616e736665727261626c652e000000000060448201526064016104b8565b6111328383611434565b61113f60008484846111e6565b61060a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b8565b6111af8161158f565b600081815260066020526040902080546111c890611b23565b15905061080457600081815260066020526040812061080491611791565b60006001600160a01b0384163b1561133357604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061122a903390899088908890600401611a65565b602060405180830381600087803b15801561124457600080fd5b505af1925050508015611274575060408051601f3d908101601f19168201909252611271918101906119d6565b60015b611319573d8080156112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b606091505b5080516113115760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104b8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd7565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166113cb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104b8565b60006113e260408051602081019091526000815290565b90506000815111611402576040518060200160405280600081525061142d565b8061140c84611643565b60405160200161141d929190611a36565b6040516020818303038152906040525b9392505050565b6001600160a01b03821661148a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b8565b6000818152600260205260409020546001600160a01b0316156114ef5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b8565b6114fb600083836110bf565b6001600160a01b0382166000908152600360205260408120805460019290611524908490611ab4565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061159a82610895565b90506115a8816000846110bf565b6115b3600083610a6d565b6001600160a01b03811660009081526003602052604081208054600192906115dc908490611ae0565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161168357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156116ad578061169781611b5e565b91506116a69050600a83611acc565b9150611687565b60008167ffffffffffffffff8111156116d657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611700576020820181803683370190505b5090505b8415610bd757611715600183611ae0565b9150611722600a86611b79565b61172d906030611ab4565b60f81b81838151811061175057634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061178a600a86611acc565b9450611704565b50805461179d90611b23565b6000825580601f106117ad575050565b601f01602090049060005260206000209081019061080491905b808211156117db57600081556001016117c7565b5090565b80356001600160a01b03811681146117f657600080fd5b919050565b60006020828403121561180c578081fd5b61142d826117df565b60008060408385031215611827578081fd5b611830836117df565b915061183e602084016117df565b90509250929050565b60008060006060848603121561185b578081fd5b611864846117df565b9250611872602085016117df565b9150604084013590509250925092565b60008060008060808587031215611897578081fd5b6118a0856117df565b93506118ae602086016117df565b925060408501359150606085013567ffffffffffffffff808211156118d1578283fd5b818701915087601f8301126118e4578283fd5b8135818111156118f6576118f6611bb9565b604051601f8201601f19908116603f0116810190838211818310171561191e5761191e611bb9565b816040528281528a6020848701011115611936578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611969578182fd5b611972836117df565b915060208301358015158114611986578182fd5b809150509250929050565b600080604083850312156119a3578182fd5b6119ac836117df565b946020939093013593505050565b6000602082840312156119cb578081fd5b813561142d81611bcf565b6000602082840312156119e7578081fd5b815161142d81611bcf565b600060208284031215611a03578081fd5b5035919050565b60008151808452611a22816020860160208601611af7565b601f01601f19169290920160200192915050565b60008351611a48818460208801611af7565b835190830190611a5c818360208801611af7565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611a976080830184611a0a565b9695505050505050565b60208152600061142d6020830184611a0a565b60008219821115611ac757611ac7611b8d565b500190565b600082611adb57611adb611ba3565b500490565b600082821015611af257611af2611b8d565b500390565b60005b83811015611b12578181015183820152602001611afa565b83811115610a5c5750506000910152565b600181811c90821680611b3757607f821691505b60208210811415611b5857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611b7257611b72611b8d565b5060010190565b600082611b8857611b88611ba3565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461080457600080fdfea26469706673582212201b02fa97d8e944c3520346ad47d57cfabf5be5d3cb412db92def7c601df0cfba64736f6c63430008040033';

type AlexCertificateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlexCertificateConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlexCertificate__factory extends ContractFactory {
  constructor(...args: AlexCertificateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _alexLibrary: string,
    _certId: BigNumberish,
    _certTitle: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<AlexCertificate> {
    return super.deploy(
      _alexLibrary,
      _certId,
      _certTitle,
      overrides || {},
    ) as Promise<AlexCertificate>;
  }
  override getDeployTransaction(
    _alexLibrary: string,
    _certId: BigNumberish,
    _certTitle: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_alexLibrary, _certId, _certTitle, overrides || {});
  }
  override attach(address: string): AlexCertificate {
    return super.attach(address) as AlexCertificate;
  }
  override connect(signer: Signer): AlexCertificate__factory {
    return super.connect(signer) as AlexCertificate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlexCertificateInterface {
    return new utils.Interface(_abi) as AlexCertificateInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AlexCertificate {
    return new Contract(address, _abi, signerOrProvider) as AlexCertificate;
  }
}
