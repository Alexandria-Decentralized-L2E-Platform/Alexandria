/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AlexAuthor,
  AlexAuthorInterface,
} from "../../contracts/AlexAuthor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract AlexAdmin",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "contract AlexAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "authorList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022e9380380620022e983398101604081905262000034916200016c565b604080518082018252600b81526a20b632bc1020baba3437b960a91b60208083019182528351808501909452600784526630a0aaaa2427a960c91b9084015281519192916200008691600091620000c6565b5080516200009c906001906020840190620000c6565b5050600e80546001600160a01b0319166001600160a01b03939093169290921790915550620001d9565b828054620000d4906200019c565b90600052602060002090601f016020900481019282620000f8576000855562000143565b82601f106200011357805160ff191683800117855562000143565b8280016001018555821562000143579182015b828111156200014357825182559160200191906001019062000126565b506200015192915062000155565b5090565b5b8082111562000151576000815560010162000156565b6000602082840312156200017e578081fd5b81516001600160a01b038116811462000195578182fd5b9392505050565b600181811c90821680620001b157607f821691505b60208210811415620001d357634e487b7160e01b600052602260045260246000fd5b50919050565b61210080620001e96000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806370a08231116100d8578063b88d4fde1161008c578063e985e9c511610066578063e985e9c51461030c578063f1b0aa1514610348578063f851a4401461036857600080fd5b8063b88d4fde146102d3578063c87b56dd146102e6578063d204c45e146102f957600080fd5b806395d89b41116100bd57806395d89b41146102ae57806398bdf6f5146102b6578063a22cb465146102c057600080fd5b806370a0823114610288578063762783c61461029b57600080fd5b806323b872dd1161013a57806342966c681161011457806342966c681461024f5780634f6ccce7146102625780636352211e1461027557600080fd5b806323b872dd146102165780632f745c591461022957806342842e0e1461023c57600080fd5b8063081812fc1161016b578063081812fc146101c4578063095ea7b3146101ef57806318160ddd1461020457600080fd5b806301ffc9a71461018757806306fdde03146101af575b600080fd5b61019a610195366004611e64565b61037b565b60405190151581526020015b60405180910390f35b6101b761038c565b6040516101a69190611f63565b6101d76101d2366004611e9c565b61041e565b6040516001600160a01b0390911681526020016101a6565b6102026101fd366004611e1d565b6104b8565b005b6009545b6040519081526020016101a6565b610202610224366004611cd2565b6105ea565b610208610237366004611e1d565b610671565b61020261024a366004611cd2565b610719565b61020261025d366004611e9c565b610734565b610208610270366004611e9c565b6107a0565b6101d7610283366004611e9c565b610852565b610208610296366004611c62565b6108dd565b6101b76102a9366004611e9c565b610977565b6101b7610a11565b600b546102089081565b6102026102ce366004611d8f565b610a20565b6102026102e1366004611d12565b610a2f565b6101b76102f4366004611e9c565b610abd565b610202610307366004611dbc565b610ac8565b61019a61031a366004611c9a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610208610356366004611e9c565b600d6020526000908152604090205481565b600e546101d7906001600160a01b031681565b600061038682610d20565b92915050565b60606000805461039b90611fe5565b80601f01602080910402602001604051908101604052809291908181526020018280546103c790611fe5565b80156104145780601f106103e957610100808354040283529160200191610414565b820191906000526020600020905b8154815290600101906020018083116103f757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661049c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104c382610852565b9050806001600160a01b0316836001600160a01b0316141561054d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610493565b336001600160a01b03821614806105695750610569813361031a565b6105db5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610493565b6105e58383610d5e565b505050565b6105f43382610dd9565b6106665760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610493565b6105e5838383610ed0565b600061067c836108dd565b82106106f05760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610493565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6105e583838360405180602001604052806000815250610a2f565b3361073e82610852565b6001600160a01b0316146107945760405162461bcd60e51b815260206004820152601460248201527f4e6f7420616c6c6f77656420746f206275726e2e0000000000000000000000006044820152606401610493565b61079d816110b5565b50565b60006107ab60095490565b821061081f5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610493565b6009828154811061084057634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103865760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610493565b60006001600160a01b03821661095b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610493565b506001600160a01b031660009081526003602052604090205490565b600c602052600090815260409020805461099090611fe5565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90611fe5565b8015610a095780601f106109de57610100808354040283529160200191610a09565b820191906000526020600020905b8154815290600101906020018083116109ec57829003601f168201915b505050505081565b60606001805461039b90611fe5565b610a2b3383836110be565b5050565b610a393383610dd9565b610aab5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610493565b610ab78484848461118d565b50505050565b60606103868261120b565b610ad1336108dd565b15610b1e5760405162461bcd60e51b815260206004820152601660248201527f416c7265616479206f776e6564206120746f6b656e2e000000000000000000006044820152606401610493565b600e60009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6c57600080fd5b505afa158015610b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba49190611c7e565b600e54604080517fde47f50b00000000000000000000000000000000000000000000000000000000815290516001600160a01b03938416936323b872dd933393911691829163de47f50b916004808301926020929190829003018186803b158015610c0e57600080fd5b505afa158015610c22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c469190611eb4565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c9557600080fd5b505af1158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd9190611e48565b506000610cd9600b5490565b6000818152600d60209081526040808320429055600c82529091208451929350610d07929091850190611b1d565b50610d128382611396565b6105e5600b80546001019055565b60006001600160e01b031982167f780e9d630000000000000000000000000000000000000000000000000000000014806103865750610386826113b0565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610da082610852565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610e525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610493565b6000610e5d83610852565b9050806001600160a01b0316846001600160a01b03161480610ea457506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ec85750836001600160a01b0316610ebd8461041e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ee382610852565b6001600160a01b031614610f5f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610493565b6001600160a01b038216610fda5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610493565b610fe583838361144b565b610ff0600082610d5e565b6001600160a01b0383166000908152600360205260408120805460019290611019908490611fa2565b90915550506001600160a01b0382166000908152600360205260408120805460019290611047908490611f76565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61079d816114b4565b816001600160a01b0316836001600160a01b031614156111205760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610493565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611198848484610ed0565b6111a4848484846114f4565b610ab75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610493565b6000818152600260205260409020546060906001600160a01b03166112985760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610493565b600082815260066020526040812080546112b190611fe5565b80601f01602080910402602001604051908101604052809291908181526020018280546112dd90611fe5565b801561132a5780601f106112ff5761010080835404028352916020019161132a565b820191906000526020600020905b81548152906001019060200180831161130d57829003601f168201915b50505050509050600061134860408051602081019091526000815290565b905080516000141561135b575092915050565b81511561138d578082604051602001611375929190611ef8565b60405160208183030381529060405292505050919050565b610ec88461164c565b610a2b828260405180602001604052806000815250611742565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061141357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061038657507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610386565b6001600160a01b038316158061146857506001600160a01b038216155b6105e55760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206973206e6f74207472616e736665727261626c652e00000000006044820152606401610493565b6114bd816117c0565b600081815260066020526040902080546114d690611fe5565b15905061079d57600081815260066020526040812061079d91611ba1565b60006001600160a01b0384163b1561164157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611538903390899088908890600401611f27565b602060405180830381600087803b15801561155257600080fd5b505af1925050508015611582575060408051601f3d908101601f1916820190925261157f91810190611e80565b60015b611627573d8080156115b0576040519150601f19603f3d011682016040523d82523d6000602084013e6115b5565b606091505b50805161161f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610493565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ec8565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166116d95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610493565b60006116f060408051602081019091526000815290565b90506000815111611710576040518060200160405280600081525061173b565b8061171a84611874565b60405160200161172b929190611ef8565b6040516020818303038152906040525b9392505050565b61174c83836119c2565b61175960008484846114f4565b6105e55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610493565b60006117cb82610852565b90506117d98160008461144b565b6117e4600083610d5e565b6001600160a01b038116600090815260036020526040812080546001929061180d908490611fa2565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816118b457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156118de57806118c881612020565b91506118d79050600a83611f8e565b91506118b8565b60008167ffffffffffffffff81111561190757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611931576020820181803683370190505b5090505b8415610ec857611946600183611fa2565b9150611953600a8661203b565b61195e906030611f76565b60f81b81838151811061198157634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506119bb600a86611f8e565b9450611935565b6001600160a01b038216611a185760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610493565b6000818152600260205260409020546001600160a01b031615611a7d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610493565b611a896000838361144b565b6001600160a01b0382166000908152600360205260408120805460019290611ab2908490611f76565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611b2990611fe5565b90600052602060002090601f016020900481019282611b4b5760008555611b91565b82601f10611b6457805160ff1916838001178555611b91565b82800160010185558215611b91579182015b82811115611b91578251825591602001919060010190611b76565b50611b9d929150611bd7565b5090565b508054611bad90611fe5565b6000825580601f10611bbd575050565b601f01602090049060005260206000209081019061079d91905b5b80821115611b9d5760008155600101611bd8565b600067ffffffffffffffff80841115611c0757611c0761207b565b604051601f8501601f19908116603f01168101908282118183101715611c2f57611c2f61207b565b81604052809350858152868686011115611c4857600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215611c73578081fd5b813561173b81612091565b600060208284031215611c8f578081fd5b815161173b81612091565b60008060408385031215611cac578081fd5b8235611cb781612091565b91506020830135611cc781612091565b809150509250929050565b600080600060608486031215611ce6578081fd5b8335611cf181612091565b92506020840135611d0181612091565b929592945050506040919091013590565b60008060008060808587031215611d27578081fd5b8435611d3281612091565b93506020850135611d4281612091565b925060408501359150606085013567ffffffffffffffff811115611d64578182fd5b8501601f81018713611d74578182fd5b611d8387823560208401611bec565b91505092959194509250565b60008060408385031215611da1578182fd5b8235611dac81612091565b91506020830135611cc7816120a6565b60008060408385031215611dce578182fd5b8235611dd981612091565b9150602083013567ffffffffffffffff811115611df4578182fd5b8301601f81018513611e04578182fd5b611e1385823560208401611bec565b9150509250929050565b60008060408385031215611e2f578182fd5b8235611e3a81612091565b946020939093013593505050565b600060208284031215611e59578081fd5b815161173b816120a6565b600060208284031215611e75578081fd5b813561173b816120b4565b600060208284031215611e91578081fd5b815161173b816120b4565b600060208284031215611ead578081fd5b5035919050565b600060208284031215611ec5578081fd5b5051919050565b60008151808452611ee4816020860160208601611fb9565b601f01601f19169290920160200192915050565b60008351611f0a818460208801611fb9565b835190830190611f1e818360208801611fb9565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611f596080830184611ecc565b9695505050505050565b60208152600061173b6020830184611ecc565b60008219821115611f8957611f8961204f565b500190565b600082611f9d57611f9d612065565b500490565b600082821015611fb457611fb461204f565b500390565b60005b83811015611fd4578181015183820152602001611fbc565b83811115610ab75750506000910152565b600181811c90821680611ff957607f821691505b6020821081141561201a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156120345761203461204f565b5060010190565b60008261204a5761204a612065565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079d57600080fd5b801515811461079d57600080fd5b6001600160e01b03198116811461079d57600080fdfea2646970667358221220ef05c90c25aed18111d49fd75d8317fc0edfaa712b3373c00798a6e09abcba9164736f6c63430008040033";

type AlexAuthorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlexAuthorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlexAuthor__factory extends ContractFactory {
  constructor(...args: AlexAuthorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlexAuthor> {
    return super.deploy(_admin, overrides || {}) as Promise<AlexAuthor>;
  }
  override getDeployTransaction(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): AlexAuthor {
    return super.attach(address) as AlexAuthor;
  }
  override connect(signer: Signer): AlexAuthor__factory {
    return super.connect(signer) as AlexAuthor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlexAuthorInterface {
    return new utils.Interface(_abi) as AlexAuthorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlexAuthor {
    return new Contract(address, _abi, signerOrProvider) as AlexAuthor;
  }
}
