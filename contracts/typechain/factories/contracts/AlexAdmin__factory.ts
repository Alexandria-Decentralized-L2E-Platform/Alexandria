/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AlexAdmin, AlexAdminInterface } from "../../contracts/AlexAdmin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_authorFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cardFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "authorFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cardFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "collectToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_authorFee",
        type: "uint256",
      },
    ],
    name: "updateAuthorfee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cardFee",
        type: "uint256",
      },
    ],
    name: "updateCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    name: "updateFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161080338038061080383398101604081905261002f916100b4565b61003833610064565b600180546001600160a01b0319166001600160a01b0394909416939093179092556002556003556100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100c8578283fd5b83516001600160a01b03811681146100de578384fd5b602085015160409095015190969495509392505050565b6106ff806101046000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639595898a11610076578063d2d6ad121161005b578063d2d6ad121461015a578063de47f50b14610171578063f2fde38b1461017a57600080fd5b80639595898a14610134578063c89245d51461014757600080fd5b8063715018a6116100a7578063715018a6146101085780638da5cb5b14610110578063949e482a1461012157600080fd5b806329b5b30c146100c3578063647846a5146100d8575b600080fd5b6100d66100d1366004610656565b61018d565b005b6001546100eb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d661032d565b6000546001600160a01b03166100eb565b6100d661012f3660046106b1565b610393565b6100d66101423660046106b1565b6103f2565b6100d6610155366004610635565b610451565b61016360035481565b6040519081526020016100ff565b61016360025481565b6100d6610188366004610635565b6104da565b6000546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040517f095ea7b3000000000000000000000000000000000000000000000000000000008152306004820152602481018290526001600160a01b0383169063095ea7b390604401602060405180830381600087803b15801561024d57600080fd5b505af1158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610691565b506040517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038481166024830152604482018390528316906323b872dd90606401602060405180830381600087803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190610691565b50505050565b6000546001600160a01b031633146103875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e3565b61039160006105bc565b565b6000546001600160a01b031633146103ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e3565b600255565b6000546001600160a01b0316331461044c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e3565b600355565b6000546001600160a01b031633146104ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e3565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101e3565b6001600160a01b0381166105b05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101e3565b6105b9816105bc565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461063057600080fd5b919050565b600060208284031215610646578081fd5b61064f82610619565b9392505050565b60008060006060848603121561066a578182fd5b61067384610619565b925061068160208501610619565b9150604084013590509250925092565b6000602082840312156106a2578081fd5b8151801515811461064f578182fd5b6000602082840312156106c2578081fd5b503591905056fea2646970667358221220e523fd1b61db572e04940d16baab301a30220497f3f0080807c99134983de32d64736f6c63430008040033";

type AlexAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlexAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlexAdmin__factory extends ContractFactory {
  constructor(...args: AlexAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeToken: string,
    _authorFee: BigNumberish,
    _cardFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlexAdmin> {
    return super.deploy(
      _feeToken,
      _authorFee,
      _cardFee,
      overrides || {}
    ) as Promise<AlexAdmin>;
  }
  override getDeployTransaction(
    _feeToken: string,
    _authorFee: BigNumberish,
    _cardFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeToken,
      _authorFee,
      _cardFee,
      overrides || {}
    );
  }
  override attach(address: string): AlexAdmin {
    return super.attach(address) as AlexAdmin;
  }
  override connect(signer: Signer): AlexAdmin__factory {
    return super.connect(signer) as AlexAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlexAdminInterface {
    return new utils.Interface(_abi) as AlexAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlexAdmin {
    return new Contract(address, _abi, signerOrProvider) as AlexAdmin;
  }
}
