/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { AlexLibraryCard, AlexLibraryCardInterface } from '../../contracts/AlexLibraryCard';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract AlexAdmin',
        name: '_admin',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'admin',
    outputs: [
      {
        internalType: 'contract AlexAdmin',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'safeMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenIdCounter',
    outputs: [
      {
        internalType: 'uint256',
        name: '_value',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001ebf38038062001ebf833981016040819052620000349162000170565b6040805180820182526011815270105b195e08131a589c985c9e4810d85c99607a1b6020808301918252835180850190945260058452641850d85c9960da1b9084015281519192916200008a91600091620000ca565b508051620000a0906001906020840190620000ca565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001dd565b828054620000d890620001a0565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b60006020828403121562000182578081fd5b81516001600160a01b038116811462000199578182fd5b9392505050565b600181811c90821680620001b557607f821691505b60208210811415620001d757634e487b7160e01b600052602260045260246000fd5b50919050565b611cd280620001ed6000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80636352211e116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610255578063e985e9c514610268578063f851a440146102a457600080fd5b8063a22cb4651461022f578063b88d4fde1461024257600080fd5b80636352211e146101e957806370a08231146101fc57806395d89b411461021d57806398bdf6f51461022557600080fd5b806323b872dd116100ee57806323b872dd1461019d57806340d097c3146101b057806342842e0e146101c357806342966c68146101d657600080fd5b806301ffc9a71461012057806306fdde0314610148578063081812fc1461015d578063095ea7b314610188575b600080fd5b61013361012e366004611a36565b6102b7565b60405190151581526020015b60405180910390f35b610150610354565b60405161013f9190611b35565b61017061016b366004611a6e565b6103e6565b6040516001600160a01b03909116815260200161013f565b61019b6101963660046119ef565b610480565b005b61019b6101ab3660046118a9565b6105b2565b61019b6101be366004611839565b610639565b61019b6101d13660046118a9565b610868565b61019b6101e4366004611a6e565b610883565b6101706101f7366004611a6e565b6108ef565b61020f61020a366004611839565b61097a565b60405190815260200161013f565b610150610a14565b60075461020f9081565b61019b61023d3660046119c2565b610a23565b61019b6102503660046118e9565b610a2e565b610150610263366004611a6e565b610abc565b610133610276366004611871565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600854610170906001600160a01b031681565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061031a57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061034e57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461036390611bb7565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90611bb7565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104645760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061048b826108ef565b9050806001600160a01b0316836001600160a01b031614156105155760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161045b565b336001600160a01b038216148061053157506105318133610276565b6105a35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161045b565b6105ad8383610ac7565b505050565b6105bc3382610b42565b61062e5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161045b565b6105ad838383610c39565b6106423361097a565b1561068f5760405162461bcd60e51b815260206004820152601660248201527f416c7265616479206f776e6564206120746f6b656e2e00000000000000000000604482015260640161045b565b600860009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dd57600080fd5b505afa1580156106f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107159190611855565b600854604080517fd2d6ad1200000000000000000000000000000000000000000000000000000000815290516001600160a01b03938416936323b872dd933393911691829163d2d6ad12916004808301926020929190829003018186803b15801561077f57600080fd5b505afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190611a86565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561080657600080fd5b505af115801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e9190611a1a565b50600061084a60075490565b905061085a600780546001019055565b6108648282610e1e565b5050565b6105ad83838360405180602001604052806000815250610a2e565b3361088d826108ef565b6001600160a01b0316146108e35760405162461bcd60e51b815260206004820152601460248201527f4e6f7420616c6c6f77656420746f206275726e2e000000000000000000000000604482015260640161045b565b6108ec81610e38565b50565b6000818152600260205260408120546001600160a01b03168061034e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161045b565b60006001600160a01b0382166109f85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161045b565b506001600160a01b031660009081526003602052604090205490565b60606001805461036390611bb7565b610864338383610e41565b610a383383610b42565b610aaa5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161045b565b610ab684848484610f10565b50505050565b606061034e82610f8e565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610b09826108ef565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610bbb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161045b565b6000610bc6836108ef565b9050806001600160a01b0316846001600160a01b03161480610c0d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c315750836001600160a01b0316610c26846103e6565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c4c826108ef565b6001600160a01b031614610cc85760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161045b565b6001600160a01b038216610d435760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161045b565b610d4e838383611119565b610d59600082610ac7565b6001600160a01b0383166000908152600360205260408120805460019290610d82908490611b74565b90915550506001600160a01b0382166000908152600360205260408120805460019290610db0908490611b48565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610864828260405180602001604052806000815250611182565b6108ec81611200565b816001600160a01b0316836001600160a01b03161415610ea35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f1b848484610c39565b610f2784848484611240565b610ab65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b6000818152600260205260409020546060906001600160a01b031661101b5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000606482015260840161045b565b6000828152600660205260408120805461103490611bb7565b80601f016020809104026020016040519081016040528092919081815260200182805461106090611bb7565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b5050505050905060006110cb60408051602081019091526000815290565b90508051600014156110de575092915050565b8151156111105780826040516020016110f8929190611aca565b60405160208183030381529060405292505050919050565b610c3184611398565b6001600160a01b038316158061113657506001600160a01b038216155b6105ad5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206973206e6f74207472616e736665727261626c652e0000000000604482015260640161045b565b61118c838361148e565b6111996000848484611240565b6105ad5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b611209816115e9565b6000818152600660205260409020805461122290611bb7565b1590506108ec5760008181526006602052604081206108ec916117eb565b60006001600160a01b0384163b1561138d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611284903390899088908890600401611af9565b602060405180830381600087803b15801561129e57600080fd5b505af19250505080156112ce575060408051601f3d908101601f191682019092526112cb91810190611a52565b60015b611373573d8080156112fc576040519150601f19603f3d011682016040523d82523d6000602084013e611301565b606091505b50805161136b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c31565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166114255760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161045b565b600061143c60408051602081019091526000815290565b9050600081511161145c5760405180602001604052806000815250611487565b806114668461169d565b604051602001611477929190611aca565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166114e45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045b565b6000818152600260205260409020546001600160a01b0316156115495760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045b565b61155560008383611119565b6001600160a01b038216600090815260036020526040812080546001929061157e908490611b48565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006115f4826108ef565b905061160281600084611119565b61160d600083610ac7565b6001600160a01b0381166000908152600360205260408120805460019290611636908490611b74565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816116dd57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561170757806116f181611bf2565b91506117009050600a83611b60565b91506116e1565b60008167ffffffffffffffff81111561173057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561175a576020820181803683370190505b5090505b8415610c315761176f600183611b74565b915061177c600a86611c0d565b611787906030611b48565b60f81b8183815181106117aa57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506117e4600a86611b60565b945061175e565b5080546117f790611bb7565b6000825580601f10611807575050565b601f0160209004906000526020600020908101906108ec91905b808211156118355760008155600101611821565b5090565b60006020828403121561184a578081fd5b813561148781611c63565b600060208284031215611866578081fd5b815161148781611c63565b60008060408385031215611883578081fd5b823561188e81611c63565b9150602083013561189e81611c63565b809150509250929050565b6000806000606084860312156118bd578081fd5b83356118c881611c63565b925060208401356118d881611c63565b929592945050506040919091013590565b600080600080608085870312156118fe578081fd5b843561190981611c63565b9350602085013561191981611c63565b925060408501359150606085013567ffffffffffffffff8082111561193c578283fd5b818701915087601f83011261194f578283fd5b81358181111561196157611961611c4d565b604051601f8201601f19908116603f0116810190838211818310171561198957611989611c4d565b816040528281528a60208487010111156119a1578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156119d4578182fd5b82356119df81611c63565b9150602083013561189e81611c78565b60008060408385031215611a01578182fd5b8235611a0c81611c63565b946020939093013593505050565b600060208284031215611a2b578081fd5b815161148781611c78565b600060208284031215611a47578081fd5b813561148781611c86565b600060208284031215611a63578081fd5b815161148781611c86565b600060208284031215611a7f578081fd5b5035919050565b600060208284031215611a97578081fd5b5051919050565b60008151808452611ab6816020860160208601611b8b565b601f01601f19169290920160200192915050565b60008351611adc818460208801611b8b565b835190830190611af0818360208801611b8b565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611b2b6080830184611a9e565b9695505050505050565b6020815260006114876020830184611a9e565b60008219821115611b5b57611b5b611c21565b500190565b600082611b6f57611b6f611c37565b500490565b600082821015611b8657611b86611c21565b500390565b60005b83811015611ba6578181015183820152602001611b8e565b83811115610ab65750506000910152565b600181811c90821680611bcb57607f821691505b60208210811415611bec57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611c0657611c06611c21565b5060010190565b600082611c1c57611c1c611c37565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146108ec57600080fd5b80151581146108ec57600080fd5b6001600160e01b0319811681146108ec57600080fdfea2646970667358221220c0f70ca50b8f56f8f0e747f979a538f4639a9ad484a9f10384759b5c7ecdc15964736f6c63430008040033';

type AlexLibraryCardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlexLibraryCardConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlexLibraryCard__factory extends ContractFactory {
  constructor(...args: AlexLibraryCardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<AlexLibraryCard> {
    return super.deploy(_admin, overrides || {}) as Promise<AlexLibraryCard>;
  }
  override getDeployTransaction(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): AlexLibraryCard {
    return super.attach(address) as AlexLibraryCard;
  }
  override connect(signer: Signer): AlexLibraryCard__factory {
    return super.connect(signer) as AlexLibraryCard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlexLibraryCardInterface {
    return new utils.Interface(_abi) as AlexLibraryCardInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AlexLibraryCard {
    return new Contract(address, _abi, signerOrProvider) as AlexLibraryCard;
  }
}
