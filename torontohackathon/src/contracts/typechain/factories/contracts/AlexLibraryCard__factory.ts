/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AlexLibraryCard,
  AlexLibraryCardInterface,
} from "../../contracts/AlexLibraryCard";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract AlexAdmin",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "contract AlexAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9a38038062001e9a833981016040819052620000349162000170565b6040805180820182526011815270105b195e08131a589c985c9e4810d85c99607a1b6020808301918252835180850190945260058452641850d85c9960da1b9084015281519192916200008a91600091620000ca565b508051620000a0906001906020840190620000ca565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001dd565b828054620000d890620001a0565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b60006020828403121562000182578081fd5b81516001600160a01b038116811462000199578182fd5b9392505050565b600181811c90821680620001b557607f821691505b60208210811415620001d757634e487b7160e01b600052602260045260246000fd5b50919050565b611cad80620001ed6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde1461021d578063c87b56dd14610230578063e985e9c514610243578063f851a4401461027f57600080fd5b80636352211e146101ce57806370a08231146101e157806395d89b4114610202578063a22cb4651461020a57600080fd5b806323b872dd116100d357806323b872dd1461018257806340d097c31461019557806342842e0e146101a857806342966c68146101bb57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004611a11565b610292565b60405190151581526020015b60405180910390f35b61013561032f565b6040516101249190611b10565b610155610150366004611a49565b6103c1565b6040516001600160a01b039091168152602001610124565b61018061017b3660046119ca565b61045b565b005b610180610190366004611884565b61058d565b6101806101a3366004611814565b610614565b6101806101b6366004611884565b610843565b6101806101c9366004611a49565b61085e565b6101556101dc366004611a49565b6108ca565b6101f46101ef366004611814565b610955565b604051908152602001610124565b6101356109ef565b61018061021836600461199d565b6109fe565b61018061022b3660046118c4565b610a09565b61013561023e366004611a49565b610a97565b61011861025136600461184c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600854610155906001600160a01b031681565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102f557506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061032957507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461033e90611b92565b80601f016020809104026020016040519081016040528092919081815260200182805461036a90611b92565b80156103b75780601f1061038c576101008083540402835291602001916103b7565b820191906000526020600020905b81548152906001019060200180831161039a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661043f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610466826108ca565b9050806001600160a01b0316836001600160a01b031614156104f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610436565b336001600160a01b038216148061050c575061050c8133610251565b61057e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610436565b6105888383610aa2565b505050565b6105973382610b1d565b6106095760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610436565b610588838383610c14565b61061d33610955565b1561066a5760405162461bcd60e51b815260206004820152601660248201527f416c7265616479206f776e6564206120746f6b656e2e000000000000000000006044820152606401610436565b600860009054906101000a90046001600160a01b03166001600160a01b031663647846a56040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b857600080fd5b505afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190611830565b600854604080517fd2d6ad1200000000000000000000000000000000000000000000000000000000815290516001600160a01b03938416936323b872dd933393911691829163d2d6ad12916004808301926020929190829003018186803b15801561075a57600080fd5b505afa15801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190611a61565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b1580156107e157600080fd5b505af11580156107f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081991906119f5565b50600061082560075490565b9050610835600780546001019055565b61083f8282610df9565b5050565b61058883838360405180602001604052806000815250610a09565b33610868826108ca565b6001600160a01b0316146108be5760405162461bcd60e51b815260206004820152601460248201527f4e6f7420616c6c6f77656420746f206275726e2e0000000000000000000000006044820152606401610436565b6108c781610e13565b50565b6000818152600260205260408120546001600160a01b0316806103295760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610436565b60006001600160a01b0382166109d35760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610436565b506001600160a01b031660009081526003602052604090205490565b60606001805461033e90611b92565b61083f338383610e1c565b610a133383610b1d565b610a855760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610436565b610a9184848484610eeb565b50505050565b606061032982610f69565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610ae4826108ca565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610b965760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610436565b6000610ba1836108ca565b9050806001600160a01b0316846001600160a01b03161480610be857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c0c5750836001600160a01b0316610c01846103c1565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c27826108ca565b6001600160a01b031614610ca35760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610436565b6001600160a01b038216610d1e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610436565b610d298383836110f4565b610d34600082610aa2565b6001600160a01b0383166000908152600360205260408120805460019290610d5d908490611b4f565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d8b908490611b23565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61083f82826040518060200160405280600081525061115d565b6108c7816111db565b816001600160a01b0316836001600160a01b03161415610e7e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610436565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ef6848484610c14565b610f028484848461121b565b610a915760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610436565b6000818152600260205260409020546060906001600160a01b0316610ff65760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610436565b6000828152600660205260408120805461100f90611b92565b80601f016020809104026020016040519081016040528092919081815260200182805461103b90611b92565b80156110885780601f1061105d57610100808354040283529160200191611088565b820191906000526020600020905b81548152906001019060200180831161106b57829003601f168201915b5050505050905060006110a660408051602081019091526000815290565b90508051600014156110b9575092915050565b8151156110eb5780826040516020016110d3929190611aa5565b60405160208183030381529060405292505050919050565b610c0c84611373565b6001600160a01b038316158061111157506001600160a01b038216155b6105885760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e206973206e6f74207472616e736665727261626c652e00000000006044820152606401610436565b6111678383611469565b611174600084848461121b565b6105885760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610436565b6111e4816115c4565b600081815260066020526040902080546111fd90611b92565b1590506108c75760008181526006602052604081206108c7916117c6565b60006001600160a01b0384163b1561136857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061125f903390899088908890600401611ad4565b602060405180830381600087803b15801561127957600080fd5b505af19250505080156112a9575060408051601f3d908101601f191682019092526112a691810190611a2d565b60015b61134e573d8080156112d7576040519150601f19603f3d011682016040523d82523d6000602084013e6112dc565b606091505b5080516113465760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610436565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c0c565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166114005760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610436565b600061141760408051602081019091526000815290565b905060008151116114375760405180602001604052806000815250611462565b8061144184611678565b604051602001611452929190611aa5565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166114bf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610436565b6000818152600260205260409020546001600160a01b0316156115245760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610436565b611530600083836110f4565b6001600160a01b0382166000908152600360205260408120805460019290611559908490611b23565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006115cf826108ca565b90506115dd816000846110f4565b6115e8600083610aa2565b6001600160a01b0381166000908152600360205260408120805460019290611611908490611b4f565b9091555050600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816116b857505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156116e257806116cc81611bcd565b91506116db9050600a83611b3b565b91506116bc565b60008167ffffffffffffffff81111561170b57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611735576020820181803683370190505b5090505b8415610c0c5761174a600183611b4f565b9150611757600a86611be8565b611762906030611b23565b60f81b81838151811061178557634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506117bf600a86611b3b565b9450611739565b5080546117d290611b92565b6000825580601f106117e2575050565b601f0160209004906000526020600020908101906108c791905b8082111561181057600081556001016117fc565b5090565b600060208284031215611825578081fd5b813561146281611c3e565b600060208284031215611841578081fd5b815161146281611c3e565b6000806040838503121561185e578081fd5b823561186981611c3e565b9150602083013561187981611c3e565b809150509250929050565b600080600060608486031215611898578081fd5b83356118a381611c3e565b925060208401356118b381611c3e565b929592945050506040919091013590565b600080600080608085870312156118d9578081fd5b84356118e481611c3e565b935060208501356118f481611c3e565b925060408501359150606085013567ffffffffffffffff80821115611917578283fd5b818701915087601f83011261192a578283fd5b81358181111561193c5761193c611c28565b604051601f8201601f19908116603f0116810190838211818310171561196457611964611c28565b816040528281528a602084870101111561197c578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156119af578182fd5b82356119ba81611c3e565b9150602083013561187981611c53565b600080604083850312156119dc578182fd5b82356119e781611c3e565b946020939093013593505050565b600060208284031215611a06578081fd5b815161146281611c53565b600060208284031215611a22578081fd5b813561146281611c61565b600060208284031215611a3e578081fd5b815161146281611c61565b600060208284031215611a5a578081fd5b5035919050565b600060208284031215611a72578081fd5b5051919050565b60008151808452611a91816020860160208601611b66565b601f01601f19169290920160200192915050565b60008351611ab7818460208801611b66565b835190830190611acb818360208801611b66565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611b066080830184611a79565b9695505050505050565b6020815260006114626020830184611a79565b60008219821115611b3657611b36611bfc565b500190565b600082611b4a57611b4a611c12565b500490565b600082821015611b6157611b61611bfc565b500390565b60005b83811015611b81578181015183820152602001611b69565b83811115610a915750506000910152565b600181811c90821680611ba657607f821691505b60208210811415611bc757634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611be157611be1611bfc565b5060010190565b600082611bf757611bf7611c12565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146108c757600080fd5b80151581146108c757600080fd5b6001600160e01b0319811681146108c757600080fdfea264697066735822122062d2ff93693ffb69753e5dd6afa2a3c95aacae07798128f754c378e9590f01e864736f6c63430008040033";

type AlexLibraryCardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlexLibraryCardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlexLibraryCard__factory extends ContractFactory {
  constructor(...args: AlexLibraryCardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AlexLibraryCard> {
    return super.deploy(_admin, overrides || {}) as Promise<AlexLibraryCard>;
  }
  override getDeployTransaction(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): AlexLibraryCard {
    return super.attach(address) as AlexLibraryCard;
  }
  override connect(signer: Signer): AlexLibraryCard__factory {
    return super.connect(signer) as AlexLibraryCard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlexLibraryCardInterface {
    return new utils.Interface(_abi) as AlexLibraryCardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlexLibraryCard {
    return new Contract(address, _abi, signerOrProvider) as AlexLibraryCard;
  }
}
